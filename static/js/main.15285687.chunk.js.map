{"version":3,"sources":["components/JumbotronWrapper.js","util/history.js","components/Login.js","routes/PublicRoutes.js","config/roles.js","routes/index.js","components/Navigation.js","routes/PrivateRoutes.js","App.js","serviceWorker.js","index.js"],"names":["JumbotronWrapper","props","react_default","a","createElement","Container","Jumbotron","style","marginTop","title","children","description","defaultProps","createBrowserHistory","Login","state","selected","handleChange","e","i","target","options","length","push","value","_this","setState","handleClick","localStorage","setItem","JSON","stringify","history","components_JumbotronWrapper","Form","Group","controlId","Label","Control","as","this","onChange","multiple","Alert","variant","Row","className","Col","sm","react_router_dom","to","Button","onClick","disabled","Component","Register","ForgotPassword","PublicRoutes","_ref","match","react","react_router","path","render","exact","component","components","admin","url","icon","module","users","dashboard","manager","customers","service1","service2","rolesConfig","routes","Object","toConsumableArray","values","customer","common","AdminOnly","Users","Dashboard","Manager","Customers","Service1","Service2","Profile","Home","Navigation","handleLogout","removeItem","_this2","Navbar","bg","Brand","color","Nav","map","route","key","concat","PrivateRoutes","allowedRoutes","roles","parse","getItem","reduce","acc","role","uniqBy","components_Navigation","Routes","authentication","routes_PublicRoutes","App","fluid","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15285687.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Jumbotron } from 'react-bootstrap';\r\n\r\nconst JumbotronWrapper = (props) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Jumbotron style={{ marginTop: '50px' }}>\r\n\t\t\t\t<h1>{props.title}</h1>\r\n\t\t\t\t<div>{props.children}</div>\r\n\t\t\t\t<p>{props.description}</p>\r\n\t\t\t</Jumbotron>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nJumbotronWrapper.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tdescription: PropTypes.string\r\n};\r\n\r\nJumbotronWrapper.defaultProps = {\r\n\tdescription: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum`\r\n};\r\n\r\nexport default JumbotronWrapper;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({});\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Alert, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport JumbotronWrapper from './JumbotronWrapper';\r\nimport { Link } from 'react-router-dom';\r\nimport history from '../util/history';\r\n\r\nclass Login extends Component {\r\n\tstate = { selected: [] };\r\n\r\n\thandleChange = (e) => {\r\n\t\tlet selected = [];\r\n\t\tfor (let i = 0; i < e.target.options.length; i++) {\r\n\t\t\tif (e.target.options[i].selected) {\r\n\t\t\t\tselected.push(e.target.options[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({ selected });\r\n\t};\r\n\r\n\thandleClick = () => {\r\n\t\tlocalStorage.setItem('roles', JSON.stringify(this.state.selected));\r\n\t\thistory.push('/app');\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<JumbotronWrapper title=\"Login\" description=\"\">\r\n\t\t\t\t<Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t<Form.Label>Select Role:</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\tvalue={this.state.selected}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value=\"admin\">Admin</option>\r\n\t\t\t\t\t\t<option value=\"manager\">Manager</option>\r\n\t\t\t\t\t\t<option value=\"customer\">Customer</option>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Alert variant=\"primary\">Support multi roles.</Alert>\r\n\t\t\t\t<Row className=\"text-right\">\r\n\t\t\t\t\t<Col sm={11}>\r\n\t\t\t\t\t\t<Link to=\"/forgot-password\">Forgot Password</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={1}>\r\n\t\t\t\t\t\t<Link to=\"/register\">Register</Link>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\tdisabled={!this.state.selected.length}\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t</JumbotronWrapper>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nLogin.propTypes = {};\r\n\r\nLogin.defaultProps = {};\r\n\r\nexport default Login;\r\n","import React, { Fragment } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport JumbotronWrapper from '../components/JumbotronWrapper';\r\nimport Login from '../components/Login';\r\n\r\nconst Register = () => (\r\n\t<JumbotronWrapper title=\"Register\">\r\n\t\t<Link className=\"nav-link\" to=\"/\">\r\n\t\t\tBack to login\r\n\t\t</Link>\r\n\t</JumbotronWrapper>\r\n);\r\nconst ForgotPassword = () => (\r\n\t<JumbotronWrapper title=\"ForgotPassword\">\r\n\t\t<Link className=\"nav-link\" to=\"/\">\r\n\t\t\tBack to login\r\n\t\t</Link>\r\n\t</JumbotronWrapper>\r\n);\r\n\r\nconst PublicRoutes = ({ match }) => (\r\n\t<Fragment>\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/forgot-password\" render={ForgotPassword} />\r\n\t\t\t<Route path=\"/register\" exact render={Register} />\r\n\t\t\t<Route path=\"\" component={Login} />\r\n\t\t</Switch>\r\n\t</Fragment>\r\n);\r\n\r\nexport default PublicRoutes;\r\n","// component's config object.\r\nconst components = {\r\n\tadmin: {\r\n\t\tcomponent: 'AdminOnly',\r\n\t\turl: '/admin-only',\r\n\t\ttitle: 'Admin Only',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t},\r\n\tusers: {\r\n\t\tcomponent: 'Users',\r\n\t\turl: '/users',\r\n\t\ttitle: 'Users',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t},\r\n\tdashboard: {\r\n\t\tcomponent: 'Dashboard',\r\n\t\turl: '/dashboard',\r\n\t\ttitle: 'Dashboard',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t},\r\n\tmanager: {\r\n\t\tcomponent: 'Manager',\r\n\t\turl: '/manager',\r\n\t\ttitle: 'Manager',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t},\r\n\tcustomers: {\r\n\t\tcomponent: 'Customers',\r\n\t\turl: '/customers',\r\n\t\ttitle: 'Customers',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t},\r\n\tservice1: {\r\n\t\tcomponent: 'Service1',\r\n\t\turl: '/service1',\r\n\t\ttitle: 'Service1',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t},\r\n\tservice2: {\r\n\t\tcomponent: 'Service2',\r\n\t\turl: '/service2',\r\n\t\ttitle: 'Service2',\r\n\t\ticon: 'menu',\r\n\t\tmodule: 1\r\n\t}\r\n};\r\n\r\n// modules for grouping.\r\nconst modules = {\r\n\t0: {\r\n\t\ttitle: 'Dashboard',\r\n\t\ticon: 'home',\r\n\t\tisExpendable: true\r\n\t}\r\n};\r\n\r\n// component's access to roles.\r\nconst rolesConfig = {\r\n\tadmin: {\r\n\t\troutes: [...Object.values(components)]\r\n\t},\r\n\tmanager: {\r\n\t\troutes: [\r\n\t\t\tcomponents.dashboard,\r\n\t\t\tcomponents.manager,\r\n\t\t\tcomponents.customers,\r\n\t\t\tcomponents.service1,\r\n\t\t\tcomponents.service2\r\n\t\t]\r\n\t},\r\n\tcustomer: {\r\n\t\troutes: [components.service1, components.service2]\r\n\t},\r\n\tcommon: {\r\n\t\troutes: [\r\n\t\t\t{\r\n\t\t\t\tcomponent: 'Home',\r\n\t\t\t\turl: '/',\r\n\t\t\t\ttitle: 'Home',\r\n\t\t\t\ticon: 'menu',\r\n\t\t\t\tmodule: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tcomponent: 'Profile',\r\n\t\t\t\turl: '/profile',\r\n\t\t\t\ttitle: 'Profile',\r\n\t\t\t\ticon: 'menu',\r\n\t\t\t\tmodule: 1\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n};\r\n\r\nexport { modules, rolesConfig };\r\n","import React from 'react';\r\nimport JumbotronWrapper from '../components/JumbotronWrapper';\r\n\r\n// Private routes.\r\nconst AdminOnly = () => <JumbotronWrapper title=\"Admin Only\" />;\r\nconst Users = () => <JumbotronWrapper title=\"Users\" />;\r\nconst Dashboard = () => <JumbotronWrapper title=\"Dashboard\" />;\r\nconst Manager = () => <JumbotronWrapper title=\"Manager\" />;\r\nconst Customers = () => <JumbotronWrapper title=\"Customers\" />;\r\nconst Service1 = () => <JumbotronWrapper title=\"Service1\" />;\r\nconst Service2 = () => <JumbotronWrapper title=\"Service2\" />;\r\nconst Profile = () => <JumbotronWrapper title=\"Profile\" />;\r\nconst Home = () => <JumbotronWrapper title=\"Home\" />;\r\n\r\nexport {\r\n\tAdminOnly,\r\n\tUsers,\r\n\tDashboard,\r\n\tManager,\r\n\tCustomers,\r\n\tService1,\r\n\tService2,\r\n\tProfile,\r\n\tHome\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport history from '../util/history';\r\n\r\nclass Navigation extends Component {\r\n\thandleLogout = () => {\r\n\t\tlocalStorage.removeItem('roles');\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Navbar bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\t<Link to=\"/app\" style={{ color: '#fff' }}>\r\n\t\t\t\t\t\tRole-Based-Access-Control\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t{this.props.routes.map((route) => (\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tkey={route.url}\r\n\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\tto={`${this.props.path}${route.url}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{route.title}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Nav>\r\n\t\t\t\t<Button onClick={this.handleLogout}>Logout</Button>\r\n\t\t\t</Navbar>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNavigation.propTypes = {\r\n\troutes: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\turl: PropTypes.string.isRequired,\r\n\t\t\ttitle: PropTypes.string.isRequired\r\n\t\t})\r\n\t).isRequired,\r\n\tpath: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { uniqBy } from 'lodash';\r\nimport { rolesConfig } from '../config/roles';\r\nimport * as Routes from './index';\r\nimport Navigation from '../components/Navigation';\r\n\r\nclass PrivateRoutes extends Component {\r\n\tstate = { allowedRoutes: [] };\r\n\r\n\tcomponentDidMount() {\r\n\t\t/*\r\n      TODO: Replace hardcoded roles with redux,\r\n       localStorage, or get from server.\r\n     */\r\n\t\tlet roles = JSON.parse(localStorage.getItem('roles'));\r\n\t\tif (roles) {\r\n\t\t\troles = ['common', ...roles];\r\n\r\n\t\t\tlet allowedRoutes = roles.reduce((acc, role) => {\r\n\t\t\t\treturn [...acc, ...rolesConfig[role].routes];\r\n\t\t\t}, []);\r\n\r\n\t\t\t// For removing duplicate entries, compare with 'url'.\r\n\t\t\tallowedRoutes = uniqBy(allowedRoutes, 'url');\r\n\t\t\tthis.setState({ allowedRoutes });\r\n\t\t} else {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Navigation\r\n\t\t\t\t\troutes={this.state.allowedRoutes}\r\n\t\t\t\t\tpath={this.props.match.path}\r\n\t\t\t\t/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t{this.state.allowedRoutes.map((route) => (\r\n\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t\tkey={route.url}\r\n\t\t\t\t\t\t\tcomponent={Routes[route.component]}\r\n\t\t\t\t\t\t\tpath={`${this.props.match.path}${route.url}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Switch>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PrivateRoutes;\r\n","import React, { Component } from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport PublicRoutes from './routes/PublicRoutes';\nimport PrivateRoutes from './routes/PrivateRoutes';\nimport history from './util/history';\n\nconst authentication = () =>\n\tJSON.parse(localStorage.getItem('roles')) ? (\n\t\t<Redirect to=\"/app\" />\n\t) : (\n\t\t<PublicRoutes />\n\t);\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Router history={history}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/app\" component={PrivateRoutes} />\n\t\t\t\t\t\t\t\t<Route path=\"/\" render={authentication} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}